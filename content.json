[{"title":"搭建ss服务器","date":"2017-05-28T03:23:28.000Z","path":"2017/05/28/搭建ss服务器/","text":"简单几步搭建一个ss服务器搭建vpn和ss服务器都能够实现翻墙的效果，但是ss服务器在客户端里面能够设置自动代理模式，可以很方便的实现访问国内国外网站两不误,所以只是翻墙的化，搭建一个ss服务器还是一个不错的选择 步骤 首先需要一个在国外的服务器(废话) 使用ssh登录 ssh root@ip地址，输入密码登录(win下可以下载putty或者使用gitbash,mac直接使用终端就好了) 安装pip环境： 1yum install python-setuptools &amp;&amp; easy_install pip 安装 shadowsocks 1pip install shadowsocks 安装完毕是不是很简单 启动 1ssserver -p 8888(要使用的端口号) -k password(自定义的密码) -m rc4-md5 现在就可以在客户端进行配置了，如果连接成功，会在命令行内打印连接的日志，比如访问的网站信息，注意必须要在服务器的安全组规则里面开放这个端口(如：阿里云服务器，默认只开启了22端口，需要手动添加要开放的端口) 停止命令 1sudo ssserver -d stop 现在ss服务器是在前台启动的，现在进行配置下，使他在后台运行 创建一个配置文件 1touch /etc/shadowsocks.json 编辑文件 1234567891011vim /etc/shadowsocks.json输入内容：&#123; &quot;server&quot;:&quot;my_server_ip&quot;, &quot;server_port&quot;:8888(自定义的端口号), &quot;local_address&quot;: &quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;mypassword(自定义连接的密码)&quot;, &quot;timeout&quot;:300, &quot;method&quot;:&quot;aes-256-cfb&quot;&#125; 最后一步 后台启动 1ssserver -c /etc/shadowsocks.json --user nobody -d start linux常用的命令 12ps -ef | grep shadowscokets # 查看指定的软件的运行情况kill -9 &apos;线程号&apos; # 杀死指定线程 特别感谢: SS+digital Ocean搭建教程 git 官方文档 前人栽树，后人乘凉，感谢他们的贡献！","tags":[{"name":"Shadowsockets 翻墙 ss","slug":"Shadowsockets-翻墙-ss","permalink":"http://blog.ipy.trade/tags/Shadowsockets-翻墙-ss/"}]},{"title":"使用mybatis插件","date":"2017-05-25T14:02:22.000Z","path":"2017/05/25/使用mybatis插件/","text":"mybstis插件实现拦截器效果","tags":[{"name":"mybatis 数据库","slug":"mybatis-数据库","permalink":"http://blog.ipy.trade/tags/mybatis-数据库/"}]},{"title":"hexo环境及跳坑","date":"2017-05-24T15:23:09.000Z","path":"2017/05/24/Hexo安装及踩坑记录/","text":"记录下安装hexo的过程中遇到的问题以及踩过的坑偶然间看到hexo+github教程，是个轻量级的博客，可以自己定制显示的各种样式，感觉比较高大上，于是乎就按照教程进行安装，但是安装的过程应该来说并不怎么顺利，所以就记录一下我在安装的过程中所遇到的问题 安装过程 前提条件： 需要安装node.js环境 需要有一个github账号 安装Hexo 1sudo npm install -g hexo 初始化一个hexo项目 1234新建一个文件夹，用来存放要写的文章，并在命令行里面进入这个文件夹hexo init 初始化项目hexo generate (简写 hexo g) 根据初始化的hello-word.md生成静态html文件hexo server (简写 hexo s) 在本地4000端口启动服务，访问http://localhost:4000 或者 http://127.0.0.1:4000 预览项目 【注】如果输入hexo s出现端口占用错误123ps -ef | grep hexo 查看被4000占用的端口，找到占用的线程号kill -9 “占用的线程号” 关掉占用4000端口的程序hexo s 重新启动程序 更换主题 现在可以在本地预览生成的博客的大致样子，但是默认的主题比较丑，所以需要去网上下载我们比较喜欢的主题 期间遇到的问题 当使用hexo d时可能会遇到 ERROR Deployer not found: git 或者 ERROR Deployer not found: github 解决方法： npm install hexo-deployer-git –save","tags":[{"name":"js hexo","slug":"js-hexo","permalink":"http://blog.ipy.trade/tags/js-hexo/"}]},{"title":"Hello","date":"2017-05-23T16:41:29.000Z","path":"2017/05/24/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[{"name":"hello hexo","slug":"hello-hexo","permalink":"http://blog.ipy.trade/tags/hello-hexo/"}]}]